class Solution {
public:
    int solve(vector<int>& coins, int amount, vector<int>& dp){
        if(amount == 0) return 0;
        if(amount < 0) return INT_MAX;
        
        if(dp[amount] != -1) return dp[amount];

        int ans = INT_MAX;
        for(int i = 0; i < coins.size(); i++){
            int res = solve(coins, amount - coins[i], dp);
            if(res != INT_MAX){
                ans = min(ans, 1 + res);
            }
        }
        return dp[amount] = ans;
    }

    int solveTab(vector<int>& coins, int amount){
        vector<int> dp(amount + 1, INT_MAX);
        dp[0] = 0;

        for(int j = 1; j <= amount; j++){
            int ans = INT_MAX;
            for(int i = 0; i < coins.size(); i++){
                if (j - coins[i] >= 0 && dp[j - coins[i]] != INT_MAX) {
                    ans = min(ans, 1 + dp[j - coins[i]]);
                }
            }
            dp[j] = ans;
        }
        return dp[amount];
    }

    int coinChange(vector<int>& coins, int amount) {

        // vector<int> dp(amount + 1, -1);
        // int ans = solve(coins, amount, dp);

        int ans = solveTab(coins, amount);

        if(ans == INT_MAX) return -1;
        return ans;
    }
};
