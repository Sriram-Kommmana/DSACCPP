class Solution {
public:
    int solve(int n){
        if(n == 0 || n == 1) return 1;
        return solve(n - 2) + solve(n - 1);
    }

    int solveMem(int n, vector<int>& dp){
        if(n == 0 || n == 1) return 1;
        if(dp[n] != -1) return dp[n];

        dp[n] = solveMem(n - 1, dp) + solveMem(n - 2, dp);

        return dp[n];
    }

    int solveTab(int n){
        vector<int> dp(n+1, -1);

        dp[0] = 1;
        dp[1] = 1;

        for(int i = 2; i <= n; i++){
            dp[i] = dp[i - 1] + dp[i - 2];
        }

        return dp[n];
    }

    int climbStairs(int n) {

        vector<int> dp(n+1, -1);
        //int ans = solve(n);
        //int ansMem = solveMem(n, dp);
        int ansTab = solveTab(n);
        return ansTab;
    }
};
