class Solution {
public:
    int peopleAwareOfSecret(int n, int delay, int forget) {
        int mod = 1e9 + 7;
        vector<long> arr(n + 1, 0);
        arr[1] = 1;

        for(int i = 1; i <= n; i++){
            int sharer = arr[i];
            if(sharer == 0) continue;
            for(int j = i + delay; j < i + forget && j <= n; j++){
                arr[j] = (arr[j] + sharer) % mod;
            }
        }
        long ans = 0;
        for(int i = n - forget + 1; i <= n; i++){
            if(i > 0) ans = (ans + arr[i])% mod;
        }
        return (int)ans;
    }
};




class Solution {
public:
    int peopleAwareOfSecret(int n, int delay, int forget) {
        vector<long long> dp(n + 1, 0);
        dp[1] = 1;
        long long share = 0, mod = 1000000007;
        for(int i = 2; i <= n; i++){
            if(i - delay > 0){
                share = (share + dp[i - delay] + mod) % mod;
            }
            if(i - forget > 0){
                share = (share - dp[i - forget] + mod) % mod;
            }
            dp[i] = share;
        }
        long long ans = 0;
        for(int i = n - forget + 1; i <= n; i++){
            ans = (ans + dp[i]) % mod;
        }
        return (int)ans;
    }
};
