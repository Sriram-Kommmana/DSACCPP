class Solution {
public:
    void dfs(int i, vector<int>& visited, vector<vector<int> >& isConnected){
        visited[i] = 1;
        for(int j = 0; j < isConnected.size(); j++){
            if(isConnected[i][j] && visited[j] == 0){
                dfs(j, visited, isConnected);
            }
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        int provinces = 0;
        vector<int> visited(n, 0);

        for(int i = 0; i < n; i++){
            if(visited[i] == 0){
                provinces++;
                dfs(i, visited, isConnected);
            }
        }
        return provinces;
    }
};
