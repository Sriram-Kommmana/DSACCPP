/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution {
  public:
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    vector<int> topView(Node *root) {
        
        vector<int> ans;
        if(root == NULL) return ans;
        
        map<int, int> store;
        queue<pair<Node*, int>> q;
        
        q.push({root, 0});
        
        while(!q.empty()){
            auto it = q.front();
            q.pop();
            
            Node* node = it.first;
            int verticalPoint = it.second;
            
            if(store.find(verticalPoint) == store.end()) store[verticalPoint] = node -> data;
            
            if(node -> left) q.push({node -> left, verticalPoint - 1});
            if(node -> right) q.push({node -> right, verticalPoint + 1});
        }
        for(auto it: store){
            ans.push_back(it.second);
        }
        return ans;
        
    }
};
